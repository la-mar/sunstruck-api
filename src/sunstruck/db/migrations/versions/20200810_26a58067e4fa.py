"""empty message

Revision ID: 26a58067e4fa
Revises:
Create Date: 2020-08-10 17:37:04.436524+00:00

"""
import sqlalchemy as sa
import sqlalchemy_utils
import sqlalchemy_utils.types.email
from alembic import op

# revision identifiers, used by Alembic.
revision = "26a58067e4fa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sqlalchemy_utils.types.email.EmailType(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.Unicode(length=20), nullable=True),
        sa.Column("country_code", sa.Unicode(length=20), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_index("ix_users_email", "users", ["email"], unique=False)
    op.create_index(op.f("ix_users_updated_at"), "users", ["updated_at"], unique=False)
    op.create_index("ix_users_username", "users", ["username"], unique=False)
    op.create_table(
        "oauth2_clients",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("client_id", sa.String(length=50), nullable=True),
        sa.Column("hashed_client_secret", sa.String(length=150), nullable=True),
        sa.Column("owner_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], name=op.f("fk_oauth2_clients_owner_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_oauth2_clients")),
        sa.UniqueConstraint("client_id", name=op.f("uq_oauth2_clients_client_id")),
    )
    op.create_index(
        "ix_oauth2_clients_client_id", "oauth2_clients", ["client_id"], unique=False
    )
    op.create_index(
        "ix_oauth2_clients_owner_id", "oauth2_clients", ["owner_id"], unique=False
    )
    op.create_index(
        op.f("ix_oauth2_clients_updated_at"),
        "oauth2_clients",
        ["updated_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_oauth2_clients_updated_at"), table_name="oauth2_clients")
    op.drop_index("ix_oauth2_clients_owner_id", table_name="oauth2_clients")
    op.drop_index("ix_oauth2_clients_client_id", table_name="oauth2_clients")
    op.drop_table("oauth2_clients")
    op.drop_index("ix_users_username", table_name="users")
    op.drop_index(op.f("ix_users_updated_at"), table_name="users")
    op.drop_index("ix_users_email", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
